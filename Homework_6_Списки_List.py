'''
5. Дан список чисел. Определите, сколько в этом списке элементов, которые больше двух своих соседей
(слева и справа),
и выведите количество таких элементов. Крайние элементы списка никогда не учитываются,
поскольку у них недостаточно соседей.
'''
from random import randint



n=[] #генерация спискa
for _ in range (int(input('Введите кол-во элементов списка: '))):
    n.append(randint(100, 200)) #Диапазон списка
print(n)
k = 0 #счётчик
for i in range (1, len(n)-1): # 1 - граница слева, н-1 граница справа. из-за отсутствия соседей
    if n[i]>n[i-1] and n[i]>n[i+1]:
        k += 1 # Вывод данных
print (k)


'''

7. Петя перешёл в другую школу. На уроке физкультуры ему понадобилось определить своё место в строю. Помогите ему это 
сделать.
    - Программа получает на вход невозрастающую последовательность натуральных чисел, означающих рост каждого человека в
    строю. После этого вводится число X – рост Пети. Все числа во входных данных натуральные и не превышают 200.
    - Выведите номер, под которым Петя должен встать в строй. Если в строю есть люди с одинаковым ростом, таким же, как
    у Пети, то он должен встать после них.

    (
	    1. Здесь понадобится сортировка. Вот пример:
	    	a = [5, 8, 2, 8, 4, 7, 0, 3, 1, 6, 9]
			print(a)										# [5, 8, 2, 8, 4, 7, 0, 3, 1, 6, 9]
			a.sort(reverse=True)
			print(a)										# [9, 8, 8, 7, 6, 5, 4, 3, 2, 1, 0]

		Параметр reverse=True отсортирует список в порядке убывания элементов.

		2. Так же, понадобится list comprehension который позволит создать список случайных значений)
'''

a=[] #генерация списка от кол-ва школьников
for _ in range (int(input('Введите кол-во учеников: '))):
    a.append (randint(100, 200))
print (a, 'Школота в расброс')
a.sort(reverse=True) #сортировка по убывающей
print(a, 'Школота по порядку')
p = int(input('Введите рост Пети: ')) #Рост Пети
indx = 1 #место пети в строю
while indx < len(a) and a[indx] >= p:
    indx +=1
print ('Петя будет стоять под номером: ', indx + 1)

'''
11. Дан список из чисел и индекс элемента в списке `k`. Удалите из списка элемент с индексом `k`, сдвинув влево все 
элементы, стоящие правее элемента с индексом `k`.
    a). Программа получает на вход список, затем число `k`. Программа сдвигает все элементы, а после этого удаляет 
    последний элемент списка при помощи метода `pop()` без параметров.
    b). Программа должна осуществлять сдвиг непосредственно в списке, а не делать это при выводе элементов. Также нельзя 
    использовать дополнительный список. 
    c). Также не следует использовать метод `pop(k)` с параметром.
    d). Использовать оператор del НЕЛЬЗЯ!

'''

a=[] #генерация спискa
for _ in range (int(input('Введите кол-во элементов списка: '))):
    a.append(randint(100, 200)) #Диапазон списка
print(a)
k = int(input('Введите индекс k: ')) #индекс списка
for i in range (k+1,len(a)):
    a[i-1] = a[i]
a.pop()
a = " / ".join([str(i) for i in a])
print (a)